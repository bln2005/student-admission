#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_PRODUCTS 100

// Structure to hold product information
typedef struct {
    int id;
    char name[50];
    float price;
    int quantity;
} Product;

// Function prototypes
void addProduct(Product products[], int *count);
void displayProducts(Product products[], int count);
void searchProduct(Product products[], int count);
void updateProduct(Product products[], int count);
void deleteProduct(Product products[], int *count);

int main() {
    Product products[MAX_PRODUCTS];
    int count = 0;
    int choice;

    do {
        printf("\nGrocery Shop Management System\n");
        printf("1. Add Product\n");
        printf("2. Display Products\n");
        printf("3. Search Product\n");
        printf("4. Update Product\n");
        printf("5. Delete Product\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addProduct(products, &count);
                break;
            case 2:
                displayProducts(products, count);
                break;
            case 3:
                searchProduct(products, count);
                break;
            case 4:
                updateProduct(products, count);
                break;
            case 5:
                deleteProduct(products, &count);
                break;
            case 6:
                printf("Exiting the program.\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 6);

    return 0;
}

void addProduct(Product products[], int *count) {
    if (*count >= MAX_PRODUCTS) {
        printf("Cannot add more products. Inventory is full.\n");
        return;
    }

    Product newProduct;
    newProduct.id = *count + 1;

    printf("Enter product name: ");
    scanf(" %[^\n]s", newProduct.name);

    printf("Enter product price: ");
    scanf("%f", &newProduct.price);

    printf("Enter product quantity: ");
    scanf("%d", &newProduct.quantity);

    products[*count] = newProduct;
    (*count)++;

    printf("Product added successfully!\n");
}

void displayProducts(Product products[], int count) {
    if (count == 0) {
        printf("No products to display.\n");
        return;
    }

    printf("\nProduct List:\n");
    printf("ID\tName\t\tPrice/Kg\tQuantity/Kg\n");
    printf("---------------------------------------------------------------------\n");

    for (int i = 0; i < count; i++) {
        printf("%d\t%-15s\t%.2f\t\t%d\n", products[i].id, products[i].name, products[i].price, products[i].quantity);
    }
}

void searchProduct(Product products[], int count) {
    if (count == 0) {
        printf("No products to search.\n");
        return;
    }

    int id;
    printf("Enter product ID to search: ");
    scanf("%d", &id);

    for (int i = 0; i < count; i++) {
        if (products[i].id == id) {
            printf("Product found:\n");
            printf("ID: %d\nName: %s\nPrice: %.2f\nQuantity: %d\n", products[i].id, products[i].name, products[i].price, products[i].quantity);
            return;
        }
    }

    printf("Product not found.\n");
}

void updateProduct(Product products[], int count) {
    if (count == 0) {
        printf("No products to update.\n");
        return;
    }

    int id;
    printf("Enter product ID to update: ");
    scanf("%d", &id);

    for (int i = 0; i < count; i++) {
        if (products[i].id == id) {
            printf("Enter new name: ");
            scanf(" %[^\n]s", products[i].name);

            printf("Enter new price: ");
            scanf("%f", &products[i].price);

            printf("Enter new quantity: ");
            scanf("%d", &products[i].quantity);

            printf("Product updated successfully!\n");
            return;
        }
    }

    printf("Product not found.\n");
}

void deleteProduct(Product products[], int *count) {
    if (*count == 0) {
        printf("No products to delete.\n");
        return;
    }

    int id;
    printf("Enter product ID to delete: ");
    scanf("%d", &id);

    for (int i = 0; i < *count; i++) {
        if (products[i].id == id) {
            for (int j = i; j < *count - 1; j++) {
                products[j] = products[j + 1];
            }
            (*count)--;
            printf("Product deleted successfully!\n");
            return;
        }
    }

    printf("Product not found.\n");
}
